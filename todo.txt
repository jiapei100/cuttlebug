GENERAL
 * Build+Download+Run path
   - pre-run command
 * GDB Wrapper that caches things like breakpoints, etc
 * Line number+function in status bar while running
 * Move to blocking GDB model with spinoff thread for commands (Rather than call-callback method)
 * Syntax colorization for Makefiles
 * Printing support
 
LOGGER
 * right click menu for log tabs:
   - clear log
   - save log
 * fix newlines in log output

MEMORY VIEW
 * Maybe move to ListCtrl
 * If not, autosize gridlabels and cells
 * support different word sizes
 * support different address widths
 * easy update method
 * cache tosser
 * fix scrolling so updates are less frequent
 * formatting
 * right click menus

GENERIC VIEW
 * creator method
 * store view info inside view object (aui stuff)

BUILD VIEW
 * callback on build complete
 * Fix overlapping build bug (building shouldn't be allowed during another build)
 * Stop build button
 * Auto scrolling of build output
 
LOCALS VIEW
 * edit support
 * proper fonts
 * right click menus
 * Doesn't update correctly in windows
 
EDITOR VIEW
 * fix bug for files that can't load (user tried to open a binary file, for example)
 * Hilighting of current line
 * Right click menu
   - Jump to execution location
 * Editor history
 * Fix folding
 * Hover for local/expression evaluation, address resolution
 * Tab right click menu
   - Close page
   - Close all
   - Close others
   - Save page/Save page as...
 * Check disk periodically for updated files and reload
 * Hilighting of current line
 * Tooltips for file tabs
 * Apply styles to open files
 * Clearing breakpoints is broken
 
PROJECT VIEW
 * right click menus
 *    Project - Project options, save, save as
 *    Files - Open, Delete, etc...
 *    Folders - open in explorer
 * DnD
 * Currently open files tree
 * Correct double click behavior
 * Currently open files group
 * Star for modified project
 * Periodic refresh of file view
 
MAIN FRAME
 * View Menu - should have all the views, and should show and hide them correctly
 * Confirmation/error dialog (for program errors)
 
BREAKPOINT VIEW
 * If breakpoint set FAILS, the target can be convinced that it's running when it's not
   - Maybe some timer based polling of the GDB session that allows for correction of state
 * Distinction between hardware and software breakpoints
 * Better breakpoint model in gdb object
 * disabling breakpoints
 * Update views properly when breakpoint is deleted
 
MISC
 * Splash Screen
 * About Box
